import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import Head from 'next/head'
import { Features, Header, Hero, Download, Pricing, Clients, Services, Contact, Footer, About } from "@/layouts";
import { Preloader } from '@/components';
import Router from 'next/router';
import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import ScrollTop from '@/components/ScrollTop/ScrollTop';



export default function Home() {
  const [loading, setLoading] = useState<boolean>(true);

  useEffect(() => {
    window.addEventListener("load", () => {
      setLoading(false);
    });
    const timeout = setTimeout(() => {
      setLoading(false);
    }, 1000);

    return () => clearTimeout(timeout);
  }, []);

  const router = useRouter();

  useEffect(() => {
    const handleStart = () => setLoading(true);
    const handleComplete = () => setLoading(false);

    router.events.on("routeChangeStart", handleStart);
    router.events.on("routeChangeComplete", handleComplete);
    router.events.on("routeChangeError", handleComplete);

    return () => {
      router.events.off("routeChangeStart", handleStart);
      router.events.off("routeChangeComplete", handleComplete);
      router.events.off("routeChangeError", handleComplete);
    };
  }, [router]);

  return (
    <>
      <Head>
        <title>SmartHotel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
      </Head>
      
      {
      loading ? <Preloader /> :
      <>
        <ScrollTop/>
        <Header />
        <Hero />
        <About/>
        <Features />
        <Download />
        <Pricing />
        <Services />
        <Clients />
        <Contact />
        <Footer />
      </>
      }
    </>
  )
};


export async function getStaticProps({ locale }: any) {
  return {
    props: {
      ...(await serverSideTranslations(locale, ['common']))
    },
  }
}